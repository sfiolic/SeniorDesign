#include <OneWire.h>
#include <DallasTemperature.h>
#include <Adafruit_GFX.h>    // Core graphics library
#include <Adafruit_TFTLCD.h> // Hardware-specific library
#include <TouchScreen.h>


#if defined(__SAM3X8E__)
    #undef __FlashStringHelper::F(string_literal)
    #define F(string_literal) string_literal
#endif

#define  BLACK   0x0000
#define  BLUE    0x001F
#define RED     0xF800
#define GREEN   0x07E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define  WHITE   0xFFFF


#define YP A3  // must be an analog pin, use "An" notation!
#define XM A2  // must be an analog pin, use "An" notation!
#define YM 9   // can be a digital pin
#define XP 8   // can be a digital pin

#define TS_MINX 150
#define TS_MINY 120
#define TS_MAXX 920
#define TS_MAXY 940

// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// For the one we're using, its 300 ohms across the X plate
TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);

#define LCD_CS A3
#define LCD_CD A2
#define LCD_WR A1
#define LCD_RD A0
// optional
#define LCD_RESET A4

// Data wire is plugged into digital pin 2 on the Arduino
#define ONE_WIRE_BUS 10

// Setup a oneWire instance to communicate with any OneWire device
OneWire oneWire(ONE_WIRE_BUS);  

// Pass oneWire reference to DallasTemperature library
DallasTemperature sensors(&oneWire);


Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);

void setup() {
  // put your setup code here, to run once:
  tft.reset();
  uint16_t identifier = tft.readID();
  tft.begin(identifier);

  tft.fillScreen(BLACK);

  pinMode(13, OUTPUT);
  //blue led
  pinMode(11, OUTPUT);
  //red led
  pinMode(12, OUTPUT);
}

#define MINPRESSURE 10
#define MAXPRESSURE 1000

void loop() {
  // need the next 5 lines for detecting the touch
  digitalWrite(13, HIGH);
  TSPoint p = ts.getPoint();
  digitalWrite(13, LOW);
  pinMode(XM, OUTPUT);
  pinMode(YP, OUTPUT);

  
  // put your main code here, to run repeatedly:
  // Send the command to get temperatures
  sensors.requestTemperatures(); 

  float temperatureC = sensors.getTempCByIndex(0);
  float temperatureF = sensors.getTempFByIndex(0);

  // blue (cooling led on and red off
  // REPLACE 72 WITH USER SET VARIABLE AND -1
  //  example: if (temperatureF < setByUser - 1) {
  if (temperatureF > 72) {
    digitalWrite(11, HIGH);
    digitalWrite(12, LOW);
  }
  // red (heating) lad on and blue off
  // REPLACE 71 WITH USER SET VARIABLE AND +1
  else if( temperatureF < 71){
    digitalWrite(12, HIGH);
    digitalWrite(11, LOW); 
  }
  // if exactly the set temp then both leds are off
  else{
    digitalWrite(12, LOW);
    digitalWrite(11, LOW);
  }


  // we have some minimum pressure we consider 'valid'
  // pressure of 0 means no pressing!

  // this is when the screen is touched anywhere 
  if (p.z > MINPRESSURE && p.z < MAXPRESSURE) {
    /*
    Serial.print("X = "); Serial.print(p.x);
    Serial.print("\tY = "); Serial.print(p.y);
    Serial.print("\tPressure = "); Serial.println(p.z);
    */

    tft.fillScreen(BLACK);
    unsigned long start = micros();
    tft.setCursor(0, 0);
    
    tft.println("Groop");
    tft.println(temperatureF);
    
  }
}
